name: Build MySQL

on:
  workflow_dispatch:
    inputs:
      mysql_version:
        description: 'MySQL 版本号'
        required: true
        default: '8.0.37'
        type: string
      platform:
        description: '平台名称'
        required: true
        default: 'Enterprise Linux'
        type: string
      vendor:
        description: '供应商名称'
        required: true
        default: 'Your Company'
        type: string

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 720  # 12小时超时

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 配置系统
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          sudo sysctl -w vm.swappiness=80
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV
          echo "DOCKER_BUILDKIT=1" >> $GITHUB_ENV

      - name: 设置构建环境
        run: |
          sudo apt-get update
          sudo apt-get install -y curl wget

      - name: 修改脚本变量
        run: |
          sed -i "s/VERSION=\".*\"/VERSION=\"${{ github.event.inputs.mysql_version }}\"/" builders/mysql/build.sh
          sed -i "s/MYSQL_PLATFORM=\".*\"/MYSQL_PLATFORM=\"${{ github.event.inputs.platform }}\"/" builders/mysql/build.sh
          sed -i "s/MYSQL_VENDOR=\".*\"/MYSQL_VENDOR=\"${{ github.event.inputs.vendor }}\"/" builders/mysql/build.sh

      - name: 构建 MySQL
        run: |
          sudo bash build.sh mysql ${{ github.event.inputs.mysql_version }}

      - name: 上传构建产物
        if: success() || failure()  # 即使失败也上传日志
        uses: actions/upload-artifact@v3
        with:
          name: mysql-${{ github.event.inputs.mysql_version }}-build-artifacts
          path: |
            output/
            **/CMakeFiles/CMakeError.log
            **/CMakeFiles/CMakeOutput.log
          retention-days: 7

      - name: 创建 Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          tag_name: mysql-${{ github.event.inputs.mysql_version }}
          name: MySQL ${{ github.event.inputs.mysql_version }}
          files: |
            output/mysql-${{ github.event.inputs.mysql_version }}-linux-x86_64.tar.gz
            output/mysql-${{ github.event.inputs.mysql_version }}-linux-x86_64.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 